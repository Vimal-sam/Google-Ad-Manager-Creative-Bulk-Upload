import os
import uuid

# Import appropriate modules from the client library.
from googleads import ad_manager
import pandas as pd

def main(client):
  # Initialize appropriate service.
  creative_service = client.GetService('CreativeService', version='v202311')
  lica_service = ad_manager_client.GetService('LineItemCreativeAssociationService', version='v202311')

  df = pd.read_excel("./image banner with optional third party tracking.xlsx")

  row_count = df['advertiserId'].count()
  x = 0
  df['creative id'] = 0
  df['creative id'] = df['creative id'].astype('int64')

  while x < row_count:

    creative_template_id = df.loc[x,'Creative Template ID']
    advertiser_id = df.loc[x,'advertiserId']

    # Create image asset.
    with open(
        os.path.join(os.getcwd(),'upload',df.loc[x,'creative filename']), 'rb') as image:
        image_data = image.read()
    size = {
        'width': df.loc[x,'width'],
        'height': df.loc[x,'height']
    }
    asset = {
        'xsi_type': 'CreativeAsset',
        'fileName': df.loc[x,'creative filename'],
        'assetByteArray': image_data,
        'size': size
    }

    # Create creative from templates.
    creative = {
        'xsi_type': 'TemplateCreative',
        'name': df.loc[x,'Creative name'],
        'advertiserId': advertiser_id,
        'size': size,
        'creativeTemplateId': creative_template_id,
        'creativeTemplateVariableValues': [
            {
                'xsi_type': 'AssetCreativeTemplateVariableValue',
                'uniqueName': 'Imagefile',
                'asset': asset
            },
            {
                'xsi_type': 'LongCreativeTemplateVariableValue',
                'uniqueName': 'Imagewidth',
                'value': df.loc[x,'width']
            },
            {
                'xsi_type': 'LongCreativeTemplateVariableValue',
                'uniqueName': 'Imageheight',
                'value': df.loc[x,'height']
            },
            {
                'xsi_type': 'UrlCreativeTemplateVariableValue',
                'uniqueName': 'ClickthroughURL',
                'value': df.loc[x,'ClickthroughURL']
            },
            {
                'xsi_type': 'UrlCreativeTemplateVariableValue',
                'uniqueName': 'Thirdpartyimpressiontracker1',
                'value': df.loc[x,'Thirdpartyimpressiontracker1']
            },
            {
                'xsi_type': 'UrlCreativeTemplateVariableValue',
                'uniqueName': 'Thirdpartyimpressiontracker2',
                'value': df.loc[x,'Thirdpartyimpressiontracker2']
            },
            {
                'xsi_type': 'StringCreativeTemplateVariableValue',
                'uniqueName': 'Targetwindow',
                'value': df.loc[x,'Targetwindow']
            }
        ]
    }

    # Call service to create the creative.
    creative_details = creative_service.createCreatives([creative])

    for i in creative_details:
        df.loc[x,'creative id'] = i['id']


    lica_details={
        'creativeId': df.loc[x,'creative id'],
        'lineItemId': df.loc[x,'Line ID']
    }
    licas = lica_service.createLineItemCreativeAssociations(lica_details)
    x+=1
  # Display results.
#   print('Template creative with id "%s", name "%s", and type "%s" was '
#         'created and can be previewed at %s.'
#         % (creative_details['id'], creative_details['name'],
#             ad_manager.AdManagerClassType(creative), creative_details['previewUrl']))

if __name__ == '__main__':
  # Initialize client object.
  ad_manager_client = ad_manager.AdManagerClient.LoadFromStorage(r'C:\Users\MM3372\Documents\GAM\googleads.yaml')
  main(ad_manager_client)
